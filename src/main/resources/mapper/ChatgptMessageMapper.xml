<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.mrying.chat.mapper.ChatgptMessageMapper" >
  <resultMap id="BaseResultMap" type="org.mrying.chat.model.ChatgptMessage" >
    <id column="message_id" property="messageId" jdbcType="VARCHAR" />
    <result column="message_direction" property="messageDirection" jdbcType="INTEGER" />
    <result column="conversation_id" property="conversationId" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    message_id, message_direction, conversation_id, content, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from blog_chatgpt_message
    where message_id = #{messageId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from blog_chatgpt_message
    where message_id = #{messageId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="org.mrying.chat.model.ChatgptMessage" >
    insert into blog_chatgpt_message (message_id, message_direction, conversation_id, 
      content, create_time)
    values (#{messageId,jdbcType=VARCHAR}, #{messageDirection,jdbcType=INTEGER}, #{conversationId,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.mrying.chat.model.ChatgptMessage" >
    insert into blog_chatgpt_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        message_id,
      </if>
      <if test="messageDirection != null" >
        message_direction,
      </if>
      <if test="conversationId != null" >
        conversation_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="messageId != null" >
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="messageDirection != null" >
        #{messageDirection,jdbcType=INTEGER},
      </if>
      <if test="conversationId != null" >
        #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.mrying.chat.model.ChatgptMessage" >
    update blog_chatgpt_message
    <set >
      <if test="messageDirection != null" >
        message_direction = #{messageDirection,jdbcType=INTEGER},
      </if>
      <if test="conversationId != null" >
        conversation_id = #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.mrying.chat.model.ChatgptMessage" >
    update blog_chatgpt_message
    set message_direction = #{messageDirection,jdbcType=INTEGER},
      conversation_id = #{conversationId,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where message_id = #{messageId,jdbcType=VARCHAR}
  </update>

  <!-- 保存当前对话内容 -->
  <insert id="insertCurrentMessage" parameterType="org.mrying.chat.model.ChatgptMessage">
    insert into blog_chatgpt_message (message_id, message_direction, conversation_id,
                                      content, create_time)
    values (#{messageId,jdbcType=VARCHAR}, #{messageDirection,jdbcType=INTEGER}, #{conversationId,jdbcType=VARCHAR},
            #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>

  <!-- 根据 conversationId 查询某个会话的若干条对话 -->
  <select id="selectMessagesByConversationId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from blog_chatgpt_message
    where conversation_id = #{conversationId,jdbcType=VARCHAR}
    order by create_time desc
    limit #{limit,jdbcType=INTEGER}
  </select>
</mapper>